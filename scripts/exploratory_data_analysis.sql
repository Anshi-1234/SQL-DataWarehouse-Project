-- 1. Database Exploration
SELECT * FROM INFORMATION_SCHEMA.TABLES;

SELECT * FROM INFORMATION_SCHEMA.COLUMNS;

-- 2. Dimensions Exploration
SELECT DISTINCT country FROM gold.dim_customers;

SELECT DISTINCT category,subcategory,product_name FROM gold.dim_products
ORDER BY 1,2,3;

-- 3. Date Exploration

-- Find the first and last order date and also calculate the time span in years.
SELECT 
	MIN(order_date) AS first_order,
	MAX(order_date) AS last_order,
	DATEDIFF(year,MIN(order_date),MAX(order_date)) AS time_span_in_years
FROM 
	gold.fact_sales;

-- Find the oldest and youngest customer and also calculate their ages.
SELECT
	MIN(birthdate) AS oldest_customer,
	DATEDIFF(year,MIN(birthdate),GETDATE()) AS oldest_age,
	MAX(birthdate) AS youngest_customer,
	DATEDIFF(year,MAX(birthdate),GETDATE()) AS yongest_age
FROM
	gold.dim_customers;

-- 4. Measures Exploration
SELECT 'Total Sales' As measure_name,SUM(sales_amount) AS measure_value FROM gold.fact_sales
UNION ALL
SELECT 'Total Quantity' As measure_name,SUM(quantity) AS measure_value FROM gold.fact_sales
UNION ALL
SELECT 'Average Price' AS measure_name,AVG(price) AS measure_value FROM gold.fact_sales
UNION ALL
SELECT 'Total Nr. Orders' AS measure_name,COUNT(DISTINCT order_number) AS measure_value FROM gold.fact_sales
UNION ALL
SELECT 'Total Nr. Products' AS measure_name,COUNT(DISTINCT product_key) AS measure_value FROM gold.dim_products
UNION ALL
SELECT 'Total Nr. Customers' AS measure_name ,COUNT(DISTINCT customer_key) AS measure_value FROM gold.dim_customers

-- 5. Magnitude Analysis

-- Find the total customers by country
SELECT
	country,
	COUNT(customer_key) AS total_customers
FROM
	gold.dim_customers
GROUP BY
	country
ORDER BY
	total_customers DESC;

-- Find the total customers by gender
SELECT
	gender,
	COUNT(customer_key) AS total_customers
FROM
	gold.dim_customers
GROUP BY
	gender
ORDER BY
	total_customers DESC;

-- Find the total products by category
SELECT
	category,
	COUNT(product_key) AS total_products
FROM
	gold.dim_products
GROUP BY
	category
ORDER BY
	total_products DESC;

-- What is the average costs in each category ?
SELECT
	category,
	AVG(cost) AS average_costs
FROM
	gold.dim_products 
GROUP BY
	category
ORDER BY
	average_costs DESC;

-- What is the total revenue generated for each category
SELECT
	p.category,
	SUM(s.sales_amount) AS total_revenue
FROM
	gold.fact_sales s
LEFT JOIN
	gold.dim_products p
ON
	s.product_key = p.product_key  
GROUP BY
	p.category
ORDER BY
	total_revenue DESC;

-- What is the total revenue generated by each customer
SELECT
	c.customer_key,
	c.first_name,
	c.last_name,
	SUM(s.sales_amount) AS total_revenue
FROM
	gold.fact_sales s
LEFT JOIN
	gold.dim_customers c
ON
	 s.customer_key = c.customer_key 
GROUP BY
	c.customer_key,c.first_name,c.last_name
ORDER BY
	total_revenue DESC;

-- What is the distribution of sold items across country
SELECT
	c.country,
	SUM(s.quantity) AS total_sold_items
FROM
	gold.fact_sales s
LEFT JOIN
	gold.dim_customers c
ON
	 s.customer_key = c.customer_key 
GROUP BY
	c.country
ORDER BY
	total_sold_items DESC;

-- 6. Ranking

-- Which 5 products generate the highest revenue ?
SELECT TOP 5
	p.product_name,
	SUM(s.sales_amount) AS total_revenue
FROM
	gold.fact_sales s
LEFT JOIN
	gold.dim_products p
ON
	s.product_key = p.product_key  
GROUP BY
	p.product_name
ORDER BY
	total_revenue DESC;

-- What are the 5 worst-performing products in terms os sales ?
SELECT TOP 5
	p.product_name,
	SUM(s.sales_amount) AS total_revenue
FROM
	gold.fact_sales s
LEFT JOIN
	gold.dim_products p
ON
	s.product_key = p.product_key  
GROUP BY
	p.product_name
ORDER BY
	total_revenue;
